---
- become: true
  file:
    mode: 0744
    owner: "{{app.owner}}"
    path: "{{app.checkout_root}}/{{carton_bin_dir}}"
    state: directory
- name: Copy carton wrapper
  template:
    dest: "{{app.checkout_root}}/{{carton}}"
    mode: 0755
    owner: "{{app.owner}}"
    src: bin/carton.j2
- name: check if git dir exists
  stat:
    path: "{{app.checkout_root}}/.git"
  register: git_dir
- name: Copy carton exec wrapper
  template:
    dest: "{{app.checkout_root}}/{{carton_exec}}"
    group: "{{app.group}}"
    mode: 0755
    owner: "{{app.owner}}"
    src: bin/carton-exec.j2
- args:
    chdir: "{{app.checkout_root}}"
  command: "git rm --ignore-unmatch {{item}}"
  name: git rm ansible managed files which may have been checked in in the past
  tags:
    - git-rm
  with_items:
    - ansible/site.retry
    - bin/carton
    - bin/carton-exec
  when: git_dir.stat.exists == true
- become: true
  file:
    path: "{{ app.checkout_root }}/{{ item }}"
    state: absent
  when: app.carton.delete_snapshot|default(false)|bool == true
  with_items:
    - cpanfile.snapshot
    - local
- debug:
    msg: "Carton for {{app.app_id}} using {{ansible_processor_cores}} workers"
- args:
    chdir: "{{ app.checkout_root }}"
  become: true
  become_user: "{{app.owner}}"
  command:
    argv:
      - cpm
      - install
      - --mirror
      - https://cpan.metacpan.org
      - --workers
      - "{{ansible_processor_cores}}"
      - --cpanfile
      - "{{item}}"
      - --show-build-log-on-failure
  environment:
    USE_CPANFILE_SNAPSHOT: "{{app.carton.use_cpanfile_snapshot}}"
  ignore_errors: true
  name: Install CPAN deps via App::cpm
  with_items: "{{app.carton.cpanfile}}"
  when: git_dir.stat.exists == true
- become: true
  become_user: "{{app.owner}}"
  command:
    argv:
      - "{{app.checkout_root}}/{{carton}}"
      - install
      - --cpanfile
      - "{{item}}"
      - "{{ app.carton.deployment | ternary('--deployment','') }}"
  ignore_errors: true
  name: Maybe update cpanfile snapshot or just run a cleanup on production
  with_items: "{{app.carton.cpanfile}}"
  when: git_dir.stat.exists == true
- args:
    chdir: "{{ app.checkout_root }}"
  become: true
  become_user: "{{app.owner}}"
  ignore_errors: true
  name: Maybe commit cpanfile.snapshot changes
  shell: |
    git add cpanfile.snapshot
    git commit -m "Update cpanfile.snapshot" --no-verify cpanfile.snapshot
    git push
  when: git_dir.stat.exists == true
