---
- debug:
    msg: '{{app|pprint }}'
    verbosity: 3
- become: yes
  file:
    mode: 0744
    owner: '{{app.owner}}'
    path: '{{app.checkout_root}}/{{carton_bin_dir}}'
    state: directory
- name: Copy carton wrapper
  template: 'src=bin/carton.j2 dest="{{app.checkout_root}}/{{carton}}" mode=0755'
- name: Copy carton exec wrapper
  template: 'src=bin/carton-exec.j2 dest="{{app.checkout_root}}/{{carton_exec}}" mode=0755 owner="{{app.owner}}" group="{{app.group}}"'
- args:
    chdir: '{{app.checkout_root}}'
  command: 'git rm --ignore-unmatch {{item}}'
  name: git rm ansible managed files which may have been checked in in the past
  with_items:
    - ansible/site.retry
    - bin/carton
    - bin/carton-exec
- args:
    chdir: '{{ app.checkout_root }}'
  become: yes
  become_user: '{{app.owner}}'
  command: 'rm -rf cpanfile.snapshot && rm -rf local'
  when: app.carton.delete_snapshot|default(false)|bool == true
- args:
    chdir: '{{ app.checkout_root }}'
  become: yes
  become_user: '{{app.owner}}'
  command: 'cpm install --mirror https://cpan.metacpan.org --mirror http://CPAN.mirror.rafal.ca/ --workers {{ansible_processor_cores}} --cpanfile {{item}}'
  environment:
    USE_CPANFILE_SNAPSHOT: '{{use_cpanfile_snapshot}}'
  ignore_errors: yes
  name: Install CPAN deps via App::cpm
  when: ansible_processor_cores > 1
  with_items: app.carton.cpanfile|default(['cpanfile'])
- become: yes
  become_user: '{{app.owner}}'
  command: '{{app.checkout_root}}/{{carton}} install --cpanfile {{item}} {{ app.carton.deployment | ternary("--deployment","") }}'
  ignore_errors: yes
  name:  Maybe update cpanfile snapshot or just run a cleanup on production
  with_items: "{{app.carton.cpanfile}}"
- args:
    chdir: '{{ app.checkout_root }}'
  become: yes
  become_user: '{{app.owner}}'
  shell: 'git add cpanfile.snapshot && git commit -m "Update cpanfile.snapshot" --no-verify cpanfile.snapshot && git push'
  ignore_errors: yes
  name: Maybe commit cpanfile.snapshot changes
